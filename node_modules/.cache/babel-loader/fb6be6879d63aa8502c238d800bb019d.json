{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\ceaser\\\\src\\\\Cipher.js\";\nimport React from 'react';\nimport { TextArea } from 'semantic-ui-react';\nimport Button from 'react-bootstrap/Button';\n\nclass Cipher extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sourceText: '',\n      offset: 1,\n      //key: 1,\n      result: '',\n      disabledButtons: true\n    };\n    this.changeText = this.changeText.bind(this); //this.changeKey = this.changeKey.bind(this);\n\n    this.offsetString = this.offsetString.bind(this);\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.resetOffset = this.resetOffset.bind(this);\n    this.codeText = this.codeText.bind(this);\n    this.validateFields = this.validateFields.bind(this);\n  }\n\n  changeText(event) {\n    this.setState({\n      sourceText: event.target.value\n    }, this.validateFields);\n  }\n\n  offsetString() {\n    const newStr = [...this.state.input].map(L => String.fromCharCode(L.charCodeAt(0) + this.state.offset)).join(\"\");\n    this.setState({\n      output: newStr\n    });\n  }\n\n  increment() {\n    this.setState({\n      offset: this.state.offset + 1\n    });\n  }\n\n  decrement() {\n    this.setState({\n      offset: this.state.offset - 1\n    });\n  }\n\n  resetOffset() {\n    this.setState({\n      offset: 0\n    });\n  } // changeKey(event) {\n  //this.setState({key: event.target.value}, this.validateFields)\n  // }\n\n\n  codeText() {\n    let result = this.state.sourceText.split('').map(e => {\n      const code = e.charCodeAt(0);\n      let step = this.state.key % 33;\n\n      if (code >= 1040 && code <= 1071) {\n        return code + step > 1071 ? String.fromCharCode(1039 + (step - (1071 - code))) : String.fromCharCode(code + step);\n      } else if (code >= 1072 && code <= 1103) {\n        return code + step > 1103 ? String.fromCharCode(1071 + (step - (1103 - code))) : String.fromCharCode(code + step);\n      } else {\n        return e;\n      }\n    }).join('');\n    this.setState({\n      result: result\n    });\n  }\n\n  validateFields() {\n    this.setState({\n      disabledButtons: !(this.state.sourceText && this.state.key)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Source text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        value: this.state.sourceText,\n        onChange: this.changeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Counter, {\n        offset: this.state.offset,\n        offsetString: this.offsetString,\n        increment: this.increment,\n        decrement: this.decrement,\n        resetOffset: this.resetOffset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        value: this.state.result,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Cipher;","map":{"version":3,"sources":["E:/ceaser/src/Cipher.js"],"names":["React","TextArea","Button","Cipher","Component","constructor","props","state","sourceText","offset","result","disabledButtons","changeText","bind","offsetString","increment","decrement","resetOffset","codeText","validateFields","event","setState","target","value","newStr","input","map","L","String","fromCharCode","charCodeAt","join","output","split","e","code","step","key","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {TextArea} from 'semantic-ui-react'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Cipher extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sourceText: '',\r\n      offset:1,\r\n      //key: 1,\r\n      result: '',\r\n      disabledButtons: true\r\n    };\r\n\r\n    this.changeText = this.changeText.bind(this);\r\n    //this.changeKey = this.changeKey.bind(this);\r\n    this.offsetString = this.offsetString.bind(this);\r\n    this.increment = this.increment.bind(this);\r\n    this.decrement = this.decrement.bind(this);\r\n    this.resetOffset = this.resetOffset.bind(this);\r\n    this.codeText = this.codeText.bind(this);\r\n    this.validateFields = this.validateFields.bind(this);\r\n  }\r\n\r\n  changeText(event) {\r\n    this.setState({sourceText: event.target.value}, this.validateFields)\r\n  }\r\n  offsetString() {\r\n    const newStr = [...this.state.input].map(L => String.fromCharCode(L.charCodeAt(0)+this.state.offset)).join(\"\");\r\n    this.setState({\r\n      output: newStr\r\n    });\r\n  }\r\n\r\n\r\n  increment() {\r\n    this.setState({\r\n      offset: this.state.offset + 1\r\n    });\r\n  }\r\n\r\n  decrement() {\r\n    this.setState({\r\n      offset: this.state.offset - 1\r\n    });\r\n  }\r\n\r\n  resetOffset() {\r\n    this.setState({\r\n      offset: 0\r\n    });\r\n  }\r\n\r\n // changeKey(event) {\r\n    //this.setState({key: event.target.value}, this.validateFields)\r\n // }\r\n\r\n  codeText() {\r\n    let result = this.state.sourceText.split('').map(e => {\r\n      const code = e.charCodeAt(0)\r\n      let step = this.state.key % 33;\r\n      if (code >= 1040 && code <= 1071) {\r\n        return (code + step) > 1071 ? String.fromCharCode(1039 + (step - (1071 - code))) : String.fromCharCode(code + step)\r\n      } else if (code >= 1072 && code <= 1103) {\r\n        return (code + step) > 1103 ? String.fromCharCode(1071 + (step - (1103 - code))) : String.fromCharCode(code + step)\r\n      } else {\r\n        return e;\r\n      }\r\n    }).join('');\r\n    this.setState({result: result});\r\n  }\r\n\r\n  \r\n  validateFields() {\r\n    this.setState({disabledButtons: !(this.state.sourceText && this.state.key)})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>Source text</label>\r\n        <TextArea value={this.state.sourceText} onChange={this.changeText}/>\r\n        <label>Key</label>\r\n        <Counter offset={this.state.offset} offsetString={this.offsetString} increment={this.increment} decrement={this.decrement} resetOffset={this.resetOffset} />\r\n        \r\n        <label>Result</label>\r\n        <TextArea value={this.state.result} disabled/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Cipher"]},"metadata":{},"sourceType":"module"}