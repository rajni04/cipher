{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\ceaser\\\\src\\\\Cipher.js\";\nimport React from 'react'; //import {TextArea} from 'semantic-ui-react'\n\nimport Button from 'react-bootstrap/Button';\n\nclass Cipher extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sourceText: '',\n      key: '',\n      result: '',\n      disabledButtons: true\n    };\n    this.changeText = this.changeText.bind(this);\n    this.changeKey = this.changeKey.bind(this);\n    this.codeText = this.codeText.bind(this);\n    this.decodeText = this.decodeText.bind(this);\n    this.validateFields = this.validateFields.bind(this);\n  }\n\n  changeText(event) {\n    this.setState({\n      sourceText: event.target.value\n    }, this.validateFields);\n  }\n\n  changeKey(event) {\n    this.setState({\n      key: event.target.value\n    }, this.validateFields);\n  }\n\n  codeText() {\n    let result = this.state.sourceText.split('').map(e => {\n      const code = e.charCodeAt(0);\n      let step = this.state.key % 33;\n\n      if (code >= 1040 && code <= 1071) {\n        return code + step > 1071 ? String.fromCharCode(1039 + (step - (1071 - code))) : String.fromCharCode(code + step);\n      } else if (code >= 1072 && code <= 1103) {\n        return code + step > 1103 ? String.fromCharCode(1071 + (step - (1103 - code))) : String.fromCharCode(code + step);\n      } else {\n        return e;\n      }\n    }).join('');\n    this.setState({\n      result: result\n    });\n  }\n\n  decodeText() {\n    let result = this.state.sourceText.split('').map(e => {\n      const code = e.charCodeAt(0);\n      let step = this.state.key % 33;\n\n      if (code >= 1040 && code <= 1071) {\n        return code - step < 1040 ? String.fromCharCode(1072 - (step - (code - 1040))) : String.fromCharCode(code - step);\n      } else if (code >= 1072 && code <= 1103) {\n        return code - step < 1072 ? String.fromCharCode(1104 - (step - (code - 1072))) : String.fromCharCode(code - step);\n      } else {\n        return e;\n      }\n    }).join('');\n    this.setState({\n      result: result\n    });\n  }\n\n  validateFields() {\n    this.setState({\n      disabledButtons: !(this.state.sourceText && this.state.key)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Source text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        value: this.state.sourceText,\n        onChange: this.changeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: 'number',\n        value: this.state.key,\n        onChange: this.changeKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'btn-group',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-info\",\n          className: this.state.disabledButtons ? 'btn-grey' : 'btn-green',\n          onClick: this.codeText,\n          disabled: this.state.disabledButtons,\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-info\",\n          className: this.state.disabledButtons ? 'btn-grey' : 'btn-green',\n          onClick: this.decodeText,\n          disabled: this.state.disabledButtons,\n          children: \"Decode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        value: this.state.result,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Cipher;","map":{"version":3,"sources":["E:/ceaser/src/Cipher.js"],"names":["React","Button","Cipher","Component","constructor","props","state","sourceText","key","result","disabledButtons","changeText","bind","changeKey","codeText","decodeText","validateFields","event","setState","target","value","split","map","e","code","charCodeAt","step","String","fromCharCode","join","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//import {TextArea} from 'semantic-ui-react'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Cipher extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sourceText: '',\r\n      key: '',\r\n      result: '',\r\n      disabledButtons: true\r\n    };\r\n\r\n    this.changeText = this.changeText.bind(this);\r\n    this.changeKey = this.changeKey.bind(this);\r\n    this.codeText = this.codeText.bind(this);\r\n    this.decodeText = this.decodeText.bind(this);\r\n    this.validateFields = this.validateFields.bind(this);\r\n  }\r\n\r\n  changeText(event) {\r\n    this.setState({sourceText: event.target.value}, this.validateFields)\r\n  }\r\n\r\n  changeKey(event) {\r\n    this.setState({key: event.target.value}, this.validateFields)\r\n  }\r\n\r\n  codeText() {\r\n    let result = this.state.sourceText.split('').map(e => {\r\n      const code = e.charCodeAt(0)\r\n      let step = this.state.key % 33;\r\n      if (code >= 1040 && code <= 1071) {\r\n        return (code + step) > 1071 ? String.fromCharCode(1039 + (step - (1071 - code))) : String.fromCharCode(code + step)\r\n      } else if (code >= 1072 && code <= 1103) {\r\n        return (code + step) > 1103 ? String.fromCharCode(1071 + (step - (1103 - code))) : String.fromCharCode(code + step)\r\n      } else {\r\n        return e;\r\n      }\r\n    }).join('');\r\n    this.setState({result: result});\r\n  }\r\n\r\n  decodeText() {\r\n    let result = this.state.sourceText.split('').map(e => {\r\n      const code = e.charCodeAt(0);\r\n      let step = this.state.key % 33;\r\n      if (code >= 1040 && code <= 1071) {\r\n        return (code - step) < 1040 ? String.fromCharCode(1072 - (step - (code - 1040))) : String.fromCharCode(code - step)\r\n      } else if (code >= 1072 && code <= 1103) {\r\n        return (code - step) < 1072 ? String.fromCharCode(1104 - (step - (code - 1072))) : String.fromCharCode(code - step)\r\n      } else {\r\n        return e;\r\n      }\r\n    }).join('');\r\n    this.setState({result: result});\r\n  }\r\n\r\n  validateFields() {\r\n    this.setState({disabledButtons: !(this.state.sourceText && this.state.key)})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>Source text</label>\r\n        <TextArea value={this.state.sourceText} onChange={this.changeText}/>\r\n        <label>Key</label>\r\n        <input type={'number'} value={this.state.key} onChange={this.changeKey}/>\r\n        <div className={'btn-group'}>\r\n          <Button  variant=\"outline-info\" className={this.state.disabledButtons ? 'btn-grey' : 'btn-green'} onClick={this.codeText} disabled={this.state.disabledButtons}>Code</Button>\r\n          <Button  variant=\"outline-info\" className={this.state.disabledButtons ? 'btn-grey' : 'btn-green'} onClick={this.decodeText} disabled={this.state.disabledButtons}>Decode</Button>\r\n        </div>\r\n        <label>Result</label>\r\n        <TextArea value={this.state.result} disabled/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Cipher"]},"metadata":{},"sourceType":"module"}