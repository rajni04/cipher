{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\ceaser\\\\src\\\\Appj.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Shift from './Shift';\nimport Plaintext from './Plaintext';\nimport Ciphertext from './Cipher';\n\nclass Appj extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      delta: 1,\n      plaintext: '',\n      ciphertext: ''\n    };\n\n    this.deltaHandler = e => {\n      const x = parseInt(e.target.value);\n      this.setState({\n        delta: x,\n        plaintext: '',\n        ciphertext: ''\n      });\n    };\n\n    this.doCipher = (str, isReverse = false) => {\n      const delta = isReverse ? -this.state.delta : this.state.delta;\n      const map = Array.prototype.map;\n      const charIndexes = map.call(str, l => l.charCodeAt());\n      return charIndexes.reduce((a, cv) => a + String.fromCharCode(cv + delta), ''); // converted string\n    };\n\n    this.cipherHandler = (e, isReverse) => {\n      let pstr = this.state.plaintext;\n      let cstr = this.state.ciphertext;\n\n      if (isReverse) {\n        // cipher to plain\n        cstr = e.target.value;\n        pstr = this.doCipher(e.target.value, isReverse);\n      } else {\n        // plain to cipher\n        pstr = e.target.value;\n        cstr = this.doCipher(e.target.value, isReverse);\n      }\n\n      this.setState({\n        ciphertext: cstr,\n        plaintext: pstr\n      });\n    };\n  }\n\n  render() {\n    let delta = this.state.delta;\n    let plaintext = this.state.plaintext;\n    let ciphertext = this.state.ciphertext;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Caesar's Cipher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Shift, {\n        delta: delta,\n        changed: e => this.deltaHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"crate\",\n        children: [/*#__PURE__*/_jsxDEV(Plaintext, {\n          plaintext: plaintext,\n          changed: e => this.cipherHandler(e, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Ciphertext, {\n          ciphertext: ciphertext,\n          changed: e => this.cipherHandler(e, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Appj;","map":{"version":3,"sources":["E:/ceaser/src/Appj.js"],"names":["React","Component","Shift","Plaintext","Ciphertext","Appj","state","delta","plaintext","ciphertext","deltaHandler","e","x","parseInt","target","value","setState","doCipher","str","isReverse","map","Array","prototype","charIndexes","call","l","charCodeAt","reduce","a","cv","String","fromCharCode","cipherHandler","pstr","cstr","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Shift from './Shift';\r\nimport Plaintext from './Plaintext';\r\nimport Ciphertext from './Cipher';\r\n\r\nclass Appj extends Component {\r\n\r\n    state = {\r\n        delta: 1,\r\n        plaintext: '',\r\n        ciphertext: '',\r\n    };\r\n\r\n    deltaHandler = ( e ) => {\r\n        const x = parseInt(e.target.value);\r\n        this.setState({\r\n            delta: x,\r\n            plaintext: '',\r\n            ciphertext: '',\r\n        });\r\n    }\r\n\r\n    doCipher = ( str, isReverse=false ) => {\r\n        const delta = isReverse ? -this.state.delta : this.state.delta;\r\n        const map = Array.prototype.map;\r\n        const charIndexes = map.call( str, l => l.charCodeAt() );\r\n        return charIndexes.reduce ( (a,cv) => a + String.fromCharCode(cv+delta), ''); // converted string\r\n    }\r\n\r\n    cipherHandler = ( e, isReverse ) => {\r\n        let pstr = this.state.plaintext;\r\n        let cstr = this.state.ciphertext;\r\n\r\n        if (isReverse) { // cipher to plain\r\n            cstr = e.target.value;\r\n            pstr = this.doCipher(e.target.value, isReverse);\r\n        } else { // plain to cipher\r\n            pstr = e.target.value;\r\n            cstr = this.doCipher(e.target.value, isReverse);\r\n        }\r\n\r\n        this.setState({\r\n            ciphertext: cstr,\r\n            plaintext: pstr\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let delta = this.state.delta;\r\n        let plaintext = this.state.plaintext;\r\n        let ciphertext = this.state.ciphertext;\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <h2>Caesar's Cipher</h2>\r\n                <Shift \r\n                    delta={delta} \r\n                    changed={ e => this.deltaHandler(e) }\r\n                />\r\n                <section className=\"crate\">\r\n                    <Plaintext \r\n                        plaintext={plaintext} \r\n                        changed={ e => this.cipherHandler(e,false) }\r\n                    />\r\n                    <Ciphertext \r\n                        ciphertext={ciphertext} \r\n                        changed={ e => this.cipherHandler(e,true) }\r\n                    />\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Appj;"]},"metadata":{},"sourceType":"module"}